<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>ru.maratk</groupId>
    <artifactId>reactor-kafka-example-libs</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>reactor-kafka-example-jooq-lib</artifactId>

  <name>reactor-kafka-example-jooq-lib</name>

  <dependencies>
    <!-- JDBC for Postgres -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${pg.jdbc.driver.version}</version>
    </dependency>
    <!-- jOOQ -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${jooq.version}</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.name}</finalName>
    <plugins>
      <!-- start PostgreSQL docker container -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                db = new org.testcontainers.containers.PostgreSQLContainer("postgres:14-alpine")
                        .withUsername("test")
                        .withDatabaseName("test")
                        .withPassword("test");
                db.start();
                project.properties.setProperty('db.url', db.getJdbcUrl());
              </source>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- update Liquibase changesets to PostgreSQL docker container -->
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${liquibase.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>update</goal>
            </goals>
            <configuration>
              <changeLogFile>db/changelog/db.changelog-master.xml</changeLogFile>
              <driver>org.postgresql.Driver</driver>
              <url>${db.url}</url>
              <username>test</username>
              <password>test</password>
              <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
              <dropFirst>false</dropFirst>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>ru.maratk</groupId>
            <artifactId>reactor-kafka-example-liquibase-lib</artifactId>
            <version>1.0-SNAPSHOT</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- generate jOOQ entities from PostgreSQL docker container -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>
        <executions>
          <execution>
            <id>java-generator</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <jdbc>
                <url>${db.url}</url>
                <user>test</user>
                <password>test</password>
              </jdbc>
              <generator>
                <database>
                  <inputSchema>public</inputSchema>
                  <excludes>databasechangelog | databasechangeloglock</excludes>
                  <includeRoutines>false</includeRoutines>
                </database>
                <target>
                  <packageName>ru.maratk.reactor.kafka.example.jooq</packageName>
                </target>
              </generator>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
